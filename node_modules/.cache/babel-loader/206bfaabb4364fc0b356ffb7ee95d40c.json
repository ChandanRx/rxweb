{"ast":null,"code":"var _jsxFileName = \"F:\\\\object\\\\practise\\\\src\\\\Slotm.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet Slotm = props => {\n  let x = props.x;\n  let y = props.y;\n  let z = props.z;\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" this is matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" this is not matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = Slotm;\nexport default Slotm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slotm\");","map":{"version":3,"names":["React","Slotm","props","x","y","z"],"sources":["F:/object/practise/src/Slotm.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nlet Slotm = (props) => {\r\n    let x = props.x;\r\n    let y = props.y;\r\n    let z = props.z;\r\n\r\n    if ((x===y && y===z)){\r\n        return(\r\n            <>\r\n                <div className=\"slot_inner\">\r\n                    <h1>{x} {y} {z}</h1>\r\n                    <h1> this is matching</h1> \r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n else {\r\n    return(\r\n        (\r\n            <>\r\n                <div className=\"slot_inner\">\r\n                    <h1>{x} {y} {z}</h1>\r\n                    <h1> this is not matching</h1> \r\n                </div>\r\n            </>\r\n        )\r\n    )\r\n\r\n}\r\n\r\n}\r\n\r\nexport default Slotm;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,IAAIC,KAAK,GAAIC,KAAD,IAAW;EACnB,IAAIC,CAAC,GAAGD,KAAK,CAACC,CAAd;EACA,IAAIC,CAAC,GAAGF,KAAK,CAACE,CAAd;EACA,IAAIC,CAAC,GAAGH,KAAK,CAACG,CAAd;;EAEA,IAAKF,CAAC,KAAGC,CAAJ,IAASA,CAAC,KAAGC,CAAlB,EAAqB;IACjB,oBACI;MAAA,uBACI;QAAK,SAAS,EAAC,YAAf;QAAA,wBACI;UAAA,WAAKF,CAAL,OAASC,CAAT,OAAaC,CAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ,iBADJ;EAQH,CATD,MAWE;IACF,oBAEQ;MAAA,uBACI;QAAK,SAAS,EAAC,YAAf;QAAA,wBACI;UAAA,WAAKF,CAAL,OAASC,CAAT,OAAaC,CAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ,iBAFR;EAWH;AAEA,CA9BD;;KAAIJ,K;AAgCJ,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}